# Maintainer: Nicolas Bourdaud <nicolas.bourdaud@gmail.com>
pkgname=("${MINGW_PACKAGE_PREFIX}-mmpack" "${MINGW_PACKAGE_PREFIX}-mmpack-build" "${MINGW_PACKAGE_PREFIX}-mmpack-repo-tools")
pkgbase=mmpack
pkgver=0.7.8
pkgrel=1
pkgdesc="MindMaze package manager
  This package provides the infrastructure for handling the build,
  installation and removal of mmpack software packages."
arch=('x86_64')
url="https://github.com/mmlabs-mindmaze/mmpack"
source=(https://github.com/mmlabs-mindmaze/mmpack/releases/download/${pkgver}/mmpack-${pkgver}.tar.xz)
sha256sums=(b6c71451ad8199fc54ce46b9d763e2467e2fca74336ae52f7566de68eba3f923)

build() {
    local builddir=$pkgbase-$pkgver/build
    mkdir -p ${builddir}
    cd ${builddir}

    MSYS2_ARG_CONV_EXCL="--prefix=" \
    meson --prefix="${MINGW_PREFIX}" --buildtype=release ..
    DESTDIR=${srcdir}/dest ninja install
}

package_mmpack() {
    depends=(${MINGW_PACKAGE_PREFIX}-libyaml
             ${MINGW_PACKAGE_PREFIX}-curl
             ${MINGW_PACKAGE_PREFIX}-libarchive
             ${MINGW_PACKAGE_PREFIX}-libmmlib1
             ${MINGW_PACKAGE_PREFIX}-zlib
             ${MINGW_PACKAGE_PREFIX}-nettle
    )

    local instdir=${srcdir}/dest/${MINGW_PREFIX}

    mkdir -p ${pkgdir}/${MINGW_PREFIX}/bin \
	     ${pkgdir}/${MINGW_PREFIX}/libexec/mmpack \
	     ${pkgdir}/${MINGW_PREFIX}/share/bash-completion/completions \
	     ${pkgdir}/${MINGW_PREFIX}/share/man/man1 \
	     ${pkgdir}/${MINGW_PREFIX}/share/mmpack
    cp -rvf ${instdir}/bin/mmpack.exe ${pkgdir}/${MINGW_PREFIX}/bin
    cp -rvf ${instdir}/libexec/mmpack ${pkgdir}/${MINGW_PREFIX}/libexec
    cp -rvf ${instdir}/share/bash-completion/completions/mmpack ${pkgdir}/${MINGW_PREFIX}/share/bash-completion/completions
    cp -rvf ${instdir}/share/man/man5 ${pkgdir}/${MINGW_PREFIX}/share/man
    cp -rvf ${instdir}/share/man/man1/mmpack{,_*}.1 ${pkgdir}/${MINGW_PREFIX}/share/man/man1
    cp -rvf ${instdir}/share/mmpack/prompt.bash ${pkgdir}/${MINGW_PREFIX}/share/mmpack
}

package_mmpack-build() {
    depends=(${MINGW_PACKAGE_PREFIX}-mmpack
             ${MINGW_PACKAGE_PREFIX}-meson
             ${MINGW_PACKAGE_PREFIX}-cmake
             ${MINGW_PACKAGE_PREFIX}-python
             ${MINGW_PACKAGE_PREFIX}-python-yaml
             ${MINGW_PACKAGE_PREFIX}-python-urllib3
             ${MINGW_PACKAGE_PREFIX}-python-pefile
             ${MINGW_PACKAGE_PREFIX}-python-lazy-object-proxy
             ${MINGW_PACKAGE_PREFIX}-python-wrapt
             ${MINGW_PACKAGE_PREFIX}-python-six
             ${MINGW_PACKAGE_PREFIX}-python-pip
             ${MINGW_PACKAGE_PREFIX}-python-setuptools
             ${MINGW_PACKAGE_PREFIX}-python-argcomplete
             ${MINGW_PACKAGE_PREFIX}-zstd
             git
             patch
    )

    local instdir=${srcdir}/dest/${MINGW_PREFIX}

    mkdir -p ${pkgdir}/${MINGW_PREFIX}/bin \
	     ${pkgdir}/${MINGW_PREFIX}/libexec/mmpack \
	     ${pkgdir}/${MINGW_PREFIX}/share/bash-completion/completions \
	     ${pkgdir}/${MINGW_PREFIX}/share/man/man1 \
	     ${pkgdir}/${MINGW_PREFIX}/share/mmpack
    cp -rvf ${instdir}/bin/mmpack-build ${pkgdir}/${MINGW_PREFIX}/bin
    cp -rvf ${instdir}/share/mmpack/mmpack_build ${pkgdir}/${MINGW_PREFIX}/share/mmpack
    cp -rvf ${instdir}/share/mmpack/pyscripts ${pkgdir}/${MINGW_PREFIX}/share/mmpack
    cp -rvf ${instdir}/share/bash-completion/completions/mmpack-build ${pkgdir}/${MINGW_PREFIX}/share/bash-completion/completions
    cp -rvf ${instdir}/share/man/man1/mmpack-build*.1 ${pkgdir}/${MINGW_PREFIX}/share/man/man1
    cp -rvf ${instdir}/share/mmpack/common-licenses ${pkgdir}/${MINGW_PREFIX}/share/mmpack
}

package_mmpack-repo-tools() {
    depends=(${MINGW_PACKAGE_PREFIX}-python
             ${MINGW_PACKAGE_PREFIX}-python-yaml
             ${MINGW_PACKAGE_PREFIX}-python-watchdog
             ${MINGW_PACKAGE_PREFIX}-python-argcomplete
             ${MINGW_PACKAGE_PREFIX}-libarchive
             ${MINGW_PACKAGE_PREFIX}-zstd
    )

    local instdir=${srcdir}/dest/${MINGW_PREFIX}

    mkdir -p ${pkgdir}/${MINGW_PREFIX}/bin \
	     ${pkgdir}/${MINGW_PREFIX}/share/man/man1 \
	     ${pkgdir}/${MINGW_PREFIX}/share/mmpack
    cp -rvf ${instdir}/bin/mmpack-modifyrepo ${pkgdir}/${MINGW_PREFIX}/bin
    cp -rvf ${instdir}/share/man/man1/mmpack-modifyrepo.1 ${pkgdir}/${MINGW_PREFIX}/share/man/man1
    cp -rvf ${instdir}/share/mmpack/repository ${pkgdir}/${MINGW_PREFIX}/share/mmpack
}


for _name in "${pkgname[@]}"; do
	eval "package_${_name}() { package_${_name#${MINGW_PACKAGE_PREFIX}-}; }";
done
